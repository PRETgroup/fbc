// This file is generated by FBtoStrl.

#ifndef PUBSUB_H_
#define PUBSUB_H_

#include "fbtypes.h"
#ifdef _MSC_VER
#include <Winsock2.h>
#else
#include <netinet/in.h>
#endif

#define UDPBUFSIZE 4096	// maximum size of a UDP packet

#ifndef ANY_BUF_SIZE
#define ANY_BUF_SIZE 32
#endif
/*
typedef struct {
	size_t len;
	char buf[ANY_BUF_SIZE];
} ANY;
*/


typedef struct {
#ifdef _MSC_VER
		SOCKET sockfd;				// socket file descriptor
#else
		int sockfd;					// socket file descriptor
#endif
	unsigned char ttl;			// time-to-live
	char buffer[UDPBUFSIZE];	// sending buffer
	struct sockaddr_in myAddr;	// my address
	struct sockaddr_in dstAddr;	// destination address
} Publisher;
void openPublisher(Publisher* me, unsigned char ttl, char* id);
//void sendPublisher(Publisher* me, ANY* sd, int count);
void closePublisher(Publisher* me);

typedef struct {
#ifdef _MSC_VER
		SOCKET sockfd;				// socket file descriptor
#else
		int sockfd;					// socket file descriptor
#endif
	char buffer[UDPBUFSIZE];	// receiving buffer
	struct sockaddr_in myAddr;	// my address
	struct in_addr groupIP;		// multicast group IP
} Subscriber;
void openSubscriber(Subscriber* me, char* id);
//bool receiveSubscriber(Subscriber* me, ANY** tail, ANY** head, int* qlen,
//		               const int count, ANY* start, const int maxlen);
void closeSubscriber(Subscriber* me);

#ifdef _MSC_VER
	int setNonblocking(SOCKET fd);
#else
	int setNonblocking(int fd);
#endif

	
#endif /*PUBSUB_H_*/
