// This file is generated by FBC

#ifndef PUBLISH_8_H_
#define PUBLISH_8_H_

#include "pubsub.h"
#include "ASN1.h"
#include "fbtypes.h"

extern void printHex(unsigned char* buf, int offset, int len);

typedef union {
	unsigned int events;
	struct {
		unsigned int INIT : 1; // service initialization
		unsigned int REQ : 1; // service request
	} event;
} PUBLISH_8IEvents;

typedef union {
	unsigned int events;
	struct {
		unsigned int INITO : 1; // initialization confirm
		unsigned int CNF : 1; // service confirmation
	} event;
} PUBLISH_8OEvents;

#define MAX_ID_LEN 31
#define MAX_STATUS_LEN 31
typedef struct {
	int _state;
	bool _entered;

	PUBLISH_8IEvents _input;
	bool QI;
	bool _QI;
	char ID[MAX_ID_LEN + 1];
	char _ID[MAX_ID_LEN + 1];
	
	bool _SD_1;
	bool _SD_2;
	char _SD_3;
	unsigned char _SD_4;
	unsigned char _SD_5;
	unsigned short _SD_6;
	FBstring _SD_7;
	int _SD_8[3];
	
	PUBLISH_8OEvents _output;
	bool QO;
	bool _QO;
	char STATUS[MAX_STATUS_LEN + 1];
	char _STATUS[MAX_STATUS_LEN + 1];

	Publisher publish;
} PUBLISH_8;

/* PUBLISH_8 initialization function */
void PUBLISH_8init(PUBLISH_8* me);

/* PUBLISH_8 execution function */
void PUBLISH_8run(PUBLISH_8* me);
void PUBLISH_8sendPublisher(PUBLISH_8* me);

#endif /*PUBLISH_8_H_*/
