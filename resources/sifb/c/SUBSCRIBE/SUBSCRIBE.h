// This file is generated by FBC

#ifndef SUBSCRIBE@postfix@_H_
#define SUBSCRIBE@postfix@_H_

@copyFile#pubsub.h
@copyFile#pubsub.c
@copyFile#subscriber.c
#include "pubsub.h"
#include "fbtypes.h"
@includeUserTypes@

typedef union {
	UDINT events;
	struct {
		UDINT INIT : 1; // service initialization
		UDINT RSP : 1; // service response
	} event;
} SUBSCRIBE@postfix@IEvents;

typedef union {
	UDINT events;
	struct {
		UDINT INITO : 1; // initialization confirm
		UDINT IND : 1; // service indication
	} event;
} SUBSCRIBE@postfix@OEvents;

#define MAX_ID_LEN 31
#define MAX_STATUS_LEN 31
typedef struct {
	UINT _state;
	BOOL _entered;

	SUBSCRIBE@postfix@IEvents _input;
	BOOL QI;
	BOOL _QI;
	char ID[MAX_ID_LEN + 1];
	char _ID[MAX_ID_LEN + 1];
	SUBSCRIBE@postfix@OEvents _output;
	BOOL QO;
	BOOL _QO;
	char STATUS[MAX_STATUS_LEN + 1];
	char _STATUS[MAX_STATUS_LEN + 1];
	
#if @queue@ > 0
	int _tail; // write point
	int _head; // read point
	int _qlen;
	
#if @index@ > 0
	// Circular buffer / queue
	@begin_varlist#RD_@
	@type#C@ _q_@var@[@queue@];
	@end_varlist@
#endif
#endif

#if @index@ > 0
	// interface vars
	@begin_varlist#RD_@
	@type#C@ _@var@;
	@end_varlist@ 
#endif
	
	Subscriber subscribe;
} SUBSCRIBE@postfix@;

/* SUBSCRIBE@postfix@ initialization function */
void SUBSCRIBE@postfix@init(SUBSCRIBE@postfix@* me);

/* SUBSCRIBE@postfix@ execution function */
void SUBSCRIBE@postfix@run(SUBSCRIBE@postfix@* me);

#endif /*SUBSCRIBE@postfix@_H_*/
