// This file is generated by FBC.
@copyFile#pubsub.h
@copyFile#subscriber.c

module SUBSCRIBE_@index@@postfix@:
	host type Subscriber;
	host type ANY;
	@declANYto@
	host procedure openSubscriber(inout Subscriber, in string);
	host procedure receiveSubscriber(inout Subscriber, inout ANY[@index@], in integer, inout bool);
	host procedure closeSubscriber(inout Subscriber);

	input INIT, RSP;
	input QI : value bool;
	input ID : value string init "";
	output INITO, IND;
	output QO : value bool;
	output STATUS : value string init "";
	output RD_@indexRange#1@ : value @indexRange#0#ANY@;
	
	signal QI_ : value bool, ID_ : value string init "" in
		loop
			if (INIT) then
				emit ?QI_ <= ?QI;
				emit ?ID_ <= ?ID;
			end if;
			if (RSP) then
				emit ?QI_ <= ?QI;
			end if;
			pause;
		end loop;
	||
		var subl : Subscriber, rds : ANY[@index@], rx : bool in
			loop
				pause;
				await 
					case immediate pre(INIT) do
						if (pre(?QI_) = true) then
							call openSubscriber(subl, pre(?ID_));
							emit ?QO <= true;
							emit ?STATUS <= "OK";
						else
							call closeSubscriber(subl);
							emit ?QO <= false;
							emit ?STATUS <= "";
						end if;
						emit INITO;
					case immediate tick do
						call receiveSubscriber(subl, rds, @index@, rx);
						if (rx = true) then
							emit ?RD_@indexRange#1@ <= @indexRange#0#ANYto#rds@;
							emit ?QO <= true;
							emit ?STATUS <= "OK";
							emit IND;
						end if;
            	end await;
			end loop;
		end var;
	end signal;
end module
