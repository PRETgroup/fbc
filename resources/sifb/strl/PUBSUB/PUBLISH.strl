// This file is generated by FBC.
@copyFile#pubsub.h
@copyFile#publisher.c

module PUBLISH_@index@@postfix@:
	host type Publisher;
	host type ANY;
	@declToANY@
	host procedure openPublisher(inout Publisher, in unsigned<8>, in string);
	host procedure sendPublisher(inout Publisher, in ANY[@index@], in integer);
	host procedure closePublisher(inout Publisher);

	input INIT, REQ;
	input QI : value bool;
	input ID : value string init "";
	input SD_@indexRange#1@ : value @indexRange#0#ANY@;
	output INITO, CNF;
	output QO : value bool;
	output STATUS : value string init "";
	
	signal QI_ : value bool,
	       ID_ : value string init "",
	       sds : ANY[@index@] in
		loop
			if (INIT) then
				emit ?QI_ <= ?QI;
				emit ?ID_ <= ?ID;
			end if;
			if (REQ) then
				emit ?QI_ <= ?QI;
				emit ?sds[@indexRange#0@] <= @indexRange#0#toANY#?SD_@;
			end if;
			pause;
		end loop;
	||
		var publ : Publisher in
			loop
				pause;
				await 
					case immediate pre(INIT) do
						if (pre(?QI_) = true) then
							call openPublisher(publ, 1, pre(?ID_));
							emit ?QO <= true;
							emit ?STATUS <= "OK";
						else
							call closePublisher(publ);
							emit ?QO <= false;
							emit ?STATUS <= "";
						end if;
						emit INITO;
					case immediate pre(REQ) do
						if (pre(?QI_) = true) then
							call sendPublisher(publ, pre(?sds), @index@);
							emit ?QO <= true;
							emit ?STATUS <= "OK";
						else
							emit ?QO <= false;
							emit ?STATUS <= "INHIBITED";
						end if;
						emit CNF;
				end await;
			end loop;
		end var;
	end signal;
end module
